<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function biodiv_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
    $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
        'bg-primary' => t('Primary'),
        'bg-secondary' => t('Secondary'),
        'bg-light' => t('Light'),
        'bg-dark' => t('Dark'),
        'bg-white' => t('White'),
        'bg-transparent' => t('Transparent'),
    );
    $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
        'bg-primary' => t('Primary'),
        'bg-secondary' => t('Secondary'),
        'bg-light' => t('Light'),
        'bg-dark' => t('Dark'),
        'bg-white' => t('White'),
        'bg-transparent' => t('Transparent'),
    );
}

function imgBuild($imgStyle, $imgStyle_2, $imgStyle_3, $imgStyle_4, $imgStyle_5, $variables) {
    if(isset($imgStyle)) {
        $media_field = $variables['elements']['field_media_img'];
        if (isset($media_field[0])) {
            $media_entity = $media_field[0]['#media'];
            $field_media_img = $media_entity->field_media_image;
            $uri = $field_media_img->entity->uri->value;

            $variables['img_styled'] = ImageStyle::load($imgStyle)->buildUrl($uri);
            $variables['img_alt'] = $field_media_img->alt;
        }
    }

    if(isset($imgStyle_2)) {
        $media_field_2 = $variables['elements']['field_media_img_2'];
        if (isset($media_field_2[0])) {
            $media_entity_2 = $media_field_2[0]['#media'];
            $field_media_img_2 = $media_entity_2->field_media_image;
            $uri_2 = $field_media_img_2->entity->uri->value;

            $variables['img_styled_2'] = ImageStyle::load($imgStyle_2)->buildUrl($uri_2);
            $variables['img_alt_2'] = $field_media_img_2->alt;
        }
    }

    if(isset($imgStyle_3)) {
        $media_field_3 = $variables['elements']['field_media_img_3'];
        if (isset($media_field_3[0])) {
            $media_entity_2 = $media_field_3[0]['#media'];
            $field_media_img_3 = $media_entity_2->field_media_image;
            $uri_3 = $field_media_img_3->entity->uri->value;

            $variables['img_styled_3'] = ImageStyle::load($imgStyle_3)->buildUrl($uri_3);
            $variables['img_alt_3'] = $field_media_img_3->alt;
        }
    }

    if(isset($imgStyle_4)) {
        $media_field_4 = $variables['elements']['field_media_img_4'];
        if (isset($media_field_4[0])) {
            $media_entity_4 = $media_field_4[0]['#media'];
            $field_media_img_4 = $media_entity_4->field_media_image;
            $uri_4 = $field_media_img_4->entity->uri->value;

            $variables['img_styled_4'] = ImageStyle::load($imgStyle_4)->buildUrl($uri_4);
            $variables['img_alt_4'] = $field_media_img_4->alt;
        }
    }

    if(isset($imgStyle_5)) {
        $media_field_5 = $variables['elements']['field_media_img_5'];
        if (isset($media_field_5[0])) {
            $media_entity_5 = $media_field_5[0]['#media'];
            $field_media_img_5 = $media_entity_5->field_media_image;
            $uri_5 = $field_media_img_5->entity->uri->value;

            $variables['img_styled_5'] = ImageStyle::load($imgStyle_5)->buildUrl($uri_5);
            $variables['img_alt_5'] = $field_media_img_5->alt;
        }
    }

    return $variables;
}

function biodiv_preprocess_paragraph__image_and_text(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('700x626', null, null, null, null, $variables);
    }
}

function biodiv_preprocess_paragraph__two_column_image(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('517x517', null, null, null, null, $variables);
    }
    if (isset($variables['elements']['field_media_img_2']['#items'])) {
        $variables = imgBuild(null, '517x517', null, null, null, $variables);
    }
}

function biodiv_preprocess_paragraph__text_with_background_image(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('1600x565', null, null, null, null, $variables);
    }
}

function biodiv_preprocess_paragraph__quote(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('159x159', null, null, null, null, $variables);
    }
}

function biodiv_preprocess_paragraph__slider_video_card_item(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('317x292', null, null, null, null, $variables);
    }
}

function biodiv_preprocess_paragraph__video_and_text(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('848x568', null, null, null, null, $variables);
    }
}

function biodiv_preprocess_paragraph__slider_quotes_item(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('159x159', null, null, null, null, $variables);
    }
}

function biodiv_preprocess_paragraph__slider_gallery(&$variables) {
    if (isset($variables['elements']['field_media_image_unlim']['#items'])) {
        $media_field = $variables['elements']['field_media_image_unlim'];
        foreach ($variables['elements']['field_media_image_unlim']['#items'] as $key => $item) {
            $media_entity = $media_field[$key]['#media'];
            $field_media_img = $media_entity->field_media_image;
            $uri = $field_media_img->entity->uri->value;

            $variables['gallery']['image_content'][$key] = array(
                'thumbnail' => ImageStyle::load('400x442')->buildUrl($uri),
                'alt' => $field_media_img->alt,
            );
        }
    }
}

function biodiv_preprocess_paragraph__two_column_gallery(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('210x201', '210x201', '210x201', '210x201', '623x443', $variables);
    }
}

function biodiv_preprocess_paragraph__two_column_theme(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('210xauto', null, null, null, null, $variables);
    }
}

function biodiv_preprocess_breadcrumb(&$variables) {
    if ($variables['breadcrumb']) {
        $request = \Drupal::request();
        $route_match = \Drupal::routeMatch();
        $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());

        // current raw path (the un-aliased Drupal path)
        $current_path = \Drupal::service('path.current')->getPath();

        // url alias
        $current_path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
        $current_path_alias = substr($current_path_alias, 1);
        $current_path_alias = str_replace('/', '>', $current_path_alias);
        $current_path_alias_pretty = ucfirst(str_replace('-', ' ', $current_path_alias));
        /*dump($current_path_alias_pretty);*/

        if (!empty($current_path_alias)) {
            $variables['breadcrumb'][] = [
                'text' => $current_path_alias_pretty,
                'attributes' => new Attribute(['class' => ['active']])
            ];
        }
    }
}

function biodiv_preprocess_views_view_fields(&$variables) {
    $view = $variables['view'];
    if ($view->id() == 'subjects') {
        $variables['link_to_node'] = $variables['row']->_entity->toUrl()->toString();
    }
}
