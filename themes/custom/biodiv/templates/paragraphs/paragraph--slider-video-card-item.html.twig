{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
    set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'container-fluid'
]
%}
{% block paragraph %}
    <div{{ attributes.addClass(classes) }}>
        {% block content %}
            <div class="row">
                <div class="col-md-12 col-media position-relative px-0">
                    {{ content.field_title }}
                    {{ content.field_wysiwyg }}
                    {% if content.field_media_iframe|render and content.field_media_img|render %}
                        <button type="button" class="btn-no-style d-block mx-auto" aria-label="Show video" data-bs-toggle="modal" data-bs-target="#modal-{{ paragraph.id() }}-iframe">
                            <div class="position-relative">
                                {# img style = 288x265 #}
                                <img class="img-fluid d-block mx-auto cursor-pointer" src="{{ img_styled }}" alt="{{ img_alt }}">
                                <div class="icon-play">
                                    <img class="img-fluid" src="/themes/custom/biodiv/images/play-btn.svg" alt="Play video">
                                </div>
                            </div>
                        </button>
                    {% endif %}
                </div>

                {#<div class="modal fade" id="modal-{{ paragraph.id() }}-iframe" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog modal-lg modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">{% trans%}Close{% endtrans%} X</button>
                            </div>
                            <div class="modal-body">
                                {{ content.field_media_iframe }}
                            </div>
                        </div>
                    </div>
                </div>#}
            </div>
        {% endblock %}
    </div>
{% endblock paragraph %}
