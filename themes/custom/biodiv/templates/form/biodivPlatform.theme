<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */
use Drupal\node\Entity\Node;
use Symfony\Component\HttpFoundation\RedirectResponse;

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function biodivPlatform_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
    $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
        'bg-primary' => t('Primary'),
        'bg-secondary' => t('Secondary'),
        'bg-light' => t('Light'),
        'bg-dark' => t('Dark'),
        'bg-white' => t('White'),
        'bg-transparent' => t('Transparent'),
    );
    $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
        'bg-primary' => t('Primary'),
        'bg-secondary' => t('Secondary'),
        'bg-light' => t('Light'),
        'bg-dark' => t('Dark'),
        'bg-white' => t('White'),
        'bg-transparent' => t('Transparent'),
    );
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function biodivPlatform_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $content_type = $node->bundle();
        $suggestions[] = 'page__' . $content_type;
    }

    $route_name = \Drupal::routeMatch()->getRouteName();
    switch ($route_name) {
        case 'system.401':
            // Unauthorized Access.
            $error = 401;
            break;

        case 'system.403':
            // Access Denied.
            $error = 403;
            break;

        case 'system.404':
            // Page Not Found.
            $error = 404;
            break;
    }
    if (isset($error)) {
        $suggestions[] = 'page__' . $error;
    }
}

/**
 * Implements hook_preprocess_user().
 */
/*function biodivPlatform_preprocess_user(&$variables) {
  
    $account = $variables['elements']['#user'];
    $variables['username'] = $account->getDisplayName();

    $user = \Drupal::entityTypeManager()->getStorage('user')->load($current_user->id());
    \Drupal::logger('wimdebug2')->debug(print_r($user, true));
}*/

function biodivPlatform_preprocess_page(&$variables) {
    /*$userCurrent = \Drupal::currentUser();
    $uid = $userCurrent->id();*/

    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());

    if (!$user->user_picture->isEmpty()) {
      $displayImg = file_create_url($user->user_picture->entity->getFileUri());
    }else{
      $displayImg = '';    
    } 

    var_dump($user->user_picture->entity->uri->value);
    $uri = $user->user_picture->entity->uri->value;
    $style = \Drupal::entityTypeManager()->ImageStyle::load('56x56')->buildUrl($uri);    
    /*$style = \Drupal::entityTypeManager()->getStorage('image_style')->load('56x56');*/
    $img_url = $style->buildUrl($displayImg);
    /*var_dump($img_url);*/
    /*Drupal::logger('wimdebug2')->debug(print_r($img_url, true));*/

    /*if (!$user->user_picture->isEmpty()) {
      $user_img = file_create_url($user->user_picture->entity->getFileUri());
    }else{
      $user_img = '';    
    } */

    
    /*$city = $user->field_city->value;*/
    $first_name = $user->field_first_name->value;
    $last_name = $user->field_last_name->value;
    $teaching_level = $user->field_teaching_level->value;

    /*Drupal::logger('wimdebug2')->debug(print_r($city, true));*/

    /*$variables['city'] = $city;*/
    $variables['picture'] = $img_url;
    $variables['firstName'] = $first_name;
    $variables['lastName'] = $last_name;
    $variables['teachingLevel'] = $teaching_level;
}