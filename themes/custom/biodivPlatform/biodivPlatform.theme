<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */
use Drupal\node\Entity\Node;
use Symfony\Component\HttpFoundation\RedirectResponse;

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function biodivPlatform_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
    $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
        'bg-primary' => t('Primary'),
        'bg-secondary' => t('Secondary'),
        'bg-light' => t('Light'),
        'bg-dark' => t('Dark'),
        'bg-white' => t('White'),
        'bg-transparent' => t('Transparent'),
    );
    $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
        'bg-primary' => t('Primary'),
        'bg-secondary' => t('Secondary'),
        'bg-light' => t('Light'),
        'bg-dark' => t('Dark'),
        'bg-white' => t('White'),
        'bg-transparent' => t('Transparent'),
    );
}

function imgBuild($imgStyle, $imgStyle_2, $imgStyle_3, $imgStyle_4, $imgStyle_5, $variables) {
    if(isset($imgStyle)) {
        $media_field = $variables['elements']['field_media_img'];
        if (isset($media_field[0])) {
            $media_entity = $media_field[0]['#media'];
            $field_media_img = $media_entity->field_media_image;
            $uri = $field_media_img->entity->uri->value;

            $variables['img_styled'] = ImageStyle::load($imgStyle)->buildUrl($uri);
            $variables['img_alt'] = $field_media_img->alt;
        }
    }

    if(isset($imgStyle_2)) {
        $media_field_2 = $variables['elements']['field_media_img_2'];
        if (isset($media_field_2[0])) {
            $media_entity_2 = $media_field_2[0]['#media'];
            $field_media_img_2 = $media_entity_2->field_media_image;
            $uri_2 = $field_media_img_2->entity->uri->value;

            $variables['img_styled_2'] = ImageStyle::load($imgStyle_2)->buildUrl($uri_2);
            $variables['img_alt_2'] = $field_media_img_2->alt;
        }
    }

    if(isset($imgStyle_3)) {
        $media_field_3 = $variables['elements']['field_media_img_3'];
        if (isset($media_field_3[0])) {
            $media_entity_2 = $media_field_3[0]['#media'];
            $field_media_img_3 = $media_entity_2->field_media_image;
            $uri_3 = $field_media_img_3->entity->uri->value;

            $variables['img_styled_3'] = ImageStyle::load($imgStyle_3)->buildUrl($uri_3);
            $variables['img_alt_3'] = $field_media_img_3->alt;
        }
    }

    if(isset($imgStyle_4)) {
        $media_field_4 = $variables['elements']['field_media_img_4'];
        if (isset($media_field_4[0])) {
            $media_entity_4 = $media_field_4[0]['#media'];
            $field_media_img_4 = $media_entity_4->field_media_image;
            $uri_4 = $field_media_img_4->entity->uri->value;

            $variables['img_styled_4'] = ImageStyle::load($imgStyle_4)->buildUrl($uri_4);
            $variables['img_alt_4'] = $field_media_img_4->alt;
        }
    }

    if(isset($imgStyle_5)) {
        $media_field_5 = $variables['elements']['field_media_img_5'];
        if (isset($media_field_5[0])) {
            $media_entity_5 = $media_field_5[0]['#media'];
            $field_media_img_5 = $media_entity_5->field_media_image;
            $uri_5 = $field_media_img_5->entity->uri->value;

            $variables['img_styled_5'] = ImageStyle::load($imgStyle_5)->buildUrl($uri_5);
            $variables['img_alt_5'] = $field_media_img_5->alt;
        }
    }

    return $variables;
}

function biodivPlatform_preprocess_paragraph__modal_slider_item(&$variables) {
    if (isset($variables['elements']['field_media_img']['#items'])) {
        $variables = imgBuild('730x250', null, null, null, null, $variables);
    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function biodivPlatform_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $content_type = $node->bundle();
        $suggestions[] = 'page__' . $content_type;
    }

    $route_name = \Drupal::routeMatch()->getRouteName();
    switch ($route_name) {
        case 'system.401':
            // Unauthorized Access.
            $error = 401;
            break;

        case 'system.403':
            // Access Denied.
            $error = 403;
            break;

        case 'system.404':
            // Page Not Found.
            $error = 404;
            break;
    }
    if (isset($error)) {
        $suggestions[] = 'page__' . $error;
    }
}


/*function biodivPlatform_preprocess_node(&$variables) {
  // Get the node ID.
  $nid = $variables['nodeId']->id();
}
*/
function biodivPlatform_preprocess_page(&$variables) {
    // Get the node ID.
    $route_name = \Drupal::routeMatch()->getRouteName();
    if ($route_name == 'entity.node.canonical') {
        $entity = \Drupal::routeMatch()->getParameter('node');
        if ($entity instanceof \Drupal\node\NodeInterface) {
            $nid = $entity->id();
            $variables['nodeId'] = $nid;
        }
    }

    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $current_user = \Drupal::currentUser();
    $user_id = \Drupal::currentUser()->id();
    $user_mail = $current_user->getEmail();
    $user_lang = \Drupal::languageManager()->getCurrentLanguage()->getId();

    $langcodes = \Drupal::languageManager()->getLanguages();
    $langcodesList = array_keys($langcodes);
    $lang_second = $langcodesList[1];
    $lang_third = $langcodesList[2];

    if (!$user->user_picture->isEmpty()) {
        $displayImg = file_create_url($user->user_picture->entity->getFileUri());
    }else{
        $displayImg = '';
    }

    $uri = $user->user_picture->entity->uri->value;
    $img_url = ImageStyle::load('56x56')->buildUrl($uri);
    $img_url_lg = ImageStyle::load('170x170')->buildUrl($uri);


    $first_name = $user->field_first_name->value;
    $last_name = $user->field_last_name->value;
    $teaching_level = $user->field_teaching_level->value;
    $teaching_level_name = '';

    $street = $user->field_street->value;
    $postal_code = $user->field_postal_code->value;
    $city = $user->field_city->value;

    $schools = [];
    // get all values of referenced field
    foreach ($user->field_teacher_school->getValue() as $val) {
        // load node of referenced field by ID
        $node = Node::load($val['target_id']);
        if ($node) {
            $schools[] = [
                'id' => $val['target_id'],
                'title' => $node->getTitle(),
                'street' => $node->field_school_address->value,
                'postal' => $node->field_school_postal_code->value,
                'city' => $node->field_school_city->value
            ];
        }
    }
    \Drupal::logger('wimdebug2')->debug(print_r($schools, true));
    switch ($teaching_level) {
        case 0:
            $teaching_level_name = 'Basisonderwijs';
            break;
        case 1:
            $teaching_level_name = 'Middelbaar onderwijs';
            break;
        case 2:
            $teaching_level_name = 'Bijzonder onderwijs';
        case 3:
            $teaching_level_name = 'Andere (animator, sociaal werker,â€¦)';
            break;
        default:
            $teaching_level_name = 'Basisonderwijs';
    }

    /*Drupal::logger('wimdebug2')->debug(print_r($city, true));*/
    $variables['userId'] = $user_id;
    $variables['userEmail'] = $user_mail;
    $variables['userLang'] = $user_lang;

    $variables['langSecond'] = $lang_second;
    $variables['langThird'] = $lang_third;

    $variables['picture'] = $img_url;
    $variables['picture_lg'] = $img_url_lg;
    $variables['firstName'] = $first_name;
    $variables['lastName'] = $last_name;
    $variables['teachingLevel'] = $teaching_level_name;

    $variables['street'] = $street;
    $variables['postalCode'] = $postal_code;
    $variables['city'] = $city;
    $variables['schools'] = $schools;
}
